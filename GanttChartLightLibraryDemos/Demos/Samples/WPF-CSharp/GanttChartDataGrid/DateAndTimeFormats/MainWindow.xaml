<Window x:Class="Demos.WPF.CSharp.GanttChartDataGrid.DateAndTimeFormats.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:hdc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.HierarchicalData.LightWPF.Controls"
        xmlns:pdgcc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.ProjectData.GanttChart.LightWPF.Controls"
        Title="GanttChartDataGrid Date and Time Formats Sample" Width="800" Height="600">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="AppResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate x:Key="ScaleHeaderContentTemplate">
                <ContentControl Content="{Binding}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Margin="2" IsTabStop="False" Width="40"/>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <pdgcc:GanttChartDataGrid x:Name="GanttChartDataGrid" UpdateScaleInterval="1.00:00:00">
            <pdgcc:GanttChartDataGrid.Columns>
                <pdgcc:DataGridColumnCollection>
                    <hdc:DataTreeGridColumn Header="Task" MinWidth="160"/>
                    <DataGridTemplateColumn Header="Start" MinWidth="160">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!-- ConverterParameter of DateTimeStringConverter allows you to specify either a standard format like (g, d) or a customized one, between quotes. -->
                                <!-- Of course, besides the date itself, you may optionally include the time in the format specifier. -->
                                <ContentControl Content="{Binding Start, Converter={StaticResource DateTimeStringConverter}, ConverterParameter='dddd, MMMM dd, yyyy H:mm'}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <!-- Optionally use StartPreservingEffort property to also update task finish when end user changes start, preserving task effort and duration. -->
                                <DatePicker SelectedDate="{Binding Start, Mode=TwoWay}" SelectedDateFormat="Long" IsEnabled="{Binding IsLeaf}" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Finish" MinWidth="160">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!-- We don't display the time for the finish date. -->
                                <ContentControl Content="{Binding Finish, Converter={StaticResource DateTimeStringConverter}, ConverterParameter='dddd, MMMM dd, yyyy'}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <!-- Optionally use FinishPreservingEffort property to also update task start when end user changes finish, preserving task effort and duration. -->
                                <DatePicker SelectedDate="{Binding Finish, Converter={StaticResource FinishDateConverter}, Mode=TwoWay}" SelectedDateFormat="Long" IsEnabled="{Binding IsLeaf}" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Predecessors" MinWidth="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!-- Optionally you may set GanttChartDataGrid.PredecessorsString{DependencyTypeAbbreviations|LagFormat|LagScale} properties to further control bound PredecessorsString values. -->
                                <ContentControl Content="{Binding PredecessorsString}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding PredecessorsString, Mode=TwoWay}" BorderThickness="0" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Assignments" MinWidth="160">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding AssignmentsContent}" VerticalAlignment="Center" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <pdgcc:AssignmentComboBox AvailableItemsSource="{Binding AssignableResources, RelativeSource={RelativeSource AncestorType=pdgcc:GanttChartDataGrid}}" SelectedContent="{Binding AssignmentsContent, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </pdgcc:DataGridColumnCollection>
            </pdgcc:GanttChartDataGrid.Columns>
            <pdgcc:GanttChartDataGrid.Scales>
                <!-- Set the scales collection in order to set HeaderContentFormat to supported built-in values (or Custom). -->
                <pdgcc:ScaleCollection>
                    <pdgcc:Scale ScaleType="Weeks" HeaderContentFormat="LongDate" HeaderBorderBrush="Silver" HeaderBorderThickness="0,0,1,1" HeaderContentTemplate="{StaticResource ScaleHeaderContentTemplate}" BorderBrush="Silver" BorderThickness="0,0,1,0"/>
                    <pdgcc:Scale ScaleType="Days" HeaderContentFormat="Day" HeaderBorderBrush="Silver" HeaderBorderThickness="0,0,1,1" HeaderContentTemplate="{StaticResource ScaleHeaderContentTemplate}"/>
                </pdgcc:ScaleCollection>
            </pdgcc:GanttChartDataGrid.Scales>
            <pdgcc:GanttChartDataGrid.Items>
                <!-- Some item properties are set in code behind. -->
                <pdgcc:GanttChartItem Content="Task 1"/>
                <pdgcc:GanttChartItem Content="Task 1.1" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 1.2" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 2"/>
                <pdgcc:GanttChartItem Content="Task 2.1" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 2.2" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 2.2.1" Indentation="2"/>
                <pdgcc:GanttChartItem Content="Task 2.2.2" Indentation="2"/>
            </pdgcc:GanttChartDataGrid.Items>
        </pdgcc:GanttChartDataGrid>
    </DockPanel>
</Window>
