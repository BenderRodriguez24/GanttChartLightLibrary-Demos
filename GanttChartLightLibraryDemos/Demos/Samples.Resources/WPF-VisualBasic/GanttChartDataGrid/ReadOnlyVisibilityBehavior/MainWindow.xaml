<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:hdc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.HierarchicalData.LightWPF.Controls"
        xmlns:pdgcc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.ProjectData.GanttChart.LightWPF.Controls"
        Title="GanttChartDataGrid Readonly Visibility Behavior Sample" Width="800" Height="600">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="AppResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <Border DockPanel.Dock="Top">
            <StackPanel Style="{StaticResource RibbonStyle}">
                <StackPanel Style="{StaticResource RibbonStackPanelStyle}">
                    <CheckBox Name="ReadOnlyCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="ReadOnlyCheckBox_Checked" Unchecked="ReadOnlyCheckBox_Checked">Read only (override)</CheckBox>
                    <CheckBox Name="GridReadOnlyCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="GridReadOnlyCheckBox_Checked" Unchecked="GridReadOnlyCheckBox_Checked">Grid read only</CheckBox>
                    <CheckBox Name="ChartReadOnlyCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="ChartReadOnlyCheckBox_Checked" Unchecked="ChartReadOnlyCheckBox_Checked">Chart read only</CheckBox>
                </StackPanel>
                <StackPanel Style="{StaticResource RibbonStackPanelStyle}">
                    <CheckBox Name="TaskNameColumnReadOnlyCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="TaskNameColumnReadOnlyCheckBox_Checked" Unchecked="TaskNameColumnReadOnlyCheckBox_Checked">Task Name column read only</CheckBox>
                    <CheckBox Name="SchedulingColumnsReadOnlyCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="SchedulingColumnsReadOnlyCheckBox_Checked" Unchecked="SchedulingColumnsReadOnlyCheckBox_Checked">Scheduling columns read only</CheckBox>
                    <CheckBox Name="AssignmentsColumnReadOnlyCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="AssignmentsColumnReadOnlyCheckBox_Checked" Unchecked="AssignmentsColumnReadOnlyCheckBox_Checked">Assignments column read only</CheckBox>
                    <CheckBox Name="EffortIsPreservedWhenChangingStartFromGridCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="EffortIsPreservedWhenChangingStartFromGridCheckBox_Checked" Unchecked="EffortIsPreservedWhenChangingStartFromGridCheckBox_Checked">Effort is preserved when changing start from grid</CheckBox>
                </StackPanel>
                <StackPanel Style="{StaticResource RibbonStackPanelStyle}">
                    <CheckBox Name="StartReadOnlyInChartCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="StartReadOnlyInChartCheckBox_Checked" Unchecked="StartReadOnlyInChartCheckBox_Checked">Start read only in chart</CheckBox>
                    <CheckBox Name="CompletionReadOnlyInChartCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="CompletionReadOnlyInChartCheckBox_Checked" Unchecked="CompletionReadOnlyInChartCheckBox_Checked">Completion read only in chart</CheckBox>
                    <CheckBox Name="DurationReadOnlyInChartCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="DurationReadOnlyInChartCheckBox_Checked" Unchecked="DurationReadOnlyInChartCheckBox_Checked">Duration read only in chart</CheckBox>
                    <CheckBox Name="DisableUpdatingDurationByStartDraggingCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="DisableUpdatingDurationByStartDraggingCheckBox_Checked" Unchecked="DisableUpdatingDurationByStartDraggingCheckBox_Checked">Disable updating duration by start dragging</CheckBox>
                </StackPanel>
                <StackPanel Style="{StaticResource RibbonStackPanelStyle}">
                    <CheckBox Name="HideDependenciesCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="HideDependenciesCheckBox_Checked" Unchecked="HideDependenciesCheckBox_Checked">Hide dependencies</CheckBox>
                    <CheckBox Name="DisableCreatingStartDependenciesCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="DisableCreatingStartDependenciesCheckBox_Checked" Unchecked="DisableCreatingStartDependenciesCheckBox_Checked">Disable creating start dependencies</CheckBox>
                    <CheckBox Name="DisableCreatingToFinishDependenciesCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="DisableCreatingToFinishDependenciesCheckBox_Checked" Unchecked="DisableCreatingToFinishDependenciesCheckBox_Checked">Disable creating to finish dependencies</CheckBox>
                    <CheckBox Name="DisableChartScrollingOnGridRowClickingCheckBox" Style="{StaticResource RibbonCheckBoxStyle}" Checked="DisableChartScrollingOnGridRowClickingCheckBox_Checked" Unchecked="DisableChartScrollingOnGridRowClickingCheckBox_Checked">Disable chart scrolling on grid row clicking</CheckBox>
                </StackPanel>
                <StackPanel Style="{StaticResource RibbonStackPanelStyle}">
                    <Label Style="{StaticResource RibbonLabelStyle}">Selected item command:</Label>
                    <Button Name="SetChartBarItemAsReadOnly" Style="{StaticResource RibbonCommandButtonStyle}" Content="Set chart bar read only (override)" Click="SetChartBarItemAsReadOnly_Click"/>
                </StackPanel>
            </StackPanel>
        </Border>
        <pdgcc:GanttChartDataGrid x:Name="GanttChartDataGrid" DockPanel.Dock="Bottom">
            <pdgcc:GanttChartDataGrid.Items>
                <!-- Some item properties are set in code behind. -->
                <pdgcc:GanttChartItem Content="Task 1"/>
                <pdgcc:GanttChartItem Content="Task 1.1" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 1.2" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 2"/>
                <pdgcc:GanttChartItem Content="Task 2.1" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 2.2" Indentation="1"/>
                <pdgcc:GanttChartItem Content="Task 2.2.1" Indentation="2"/>
                <pdgcc:GanttChartItem Content="Task 2.2.2" Indentation="2"/>
            </pdgcc:GanttChartDataGrid.Items>
            <pdgcc:GanttChartDataGrid.Columns>
                <pdgcc:DataGridColumnCollection>
                    <hdc:DataTreeGridColumn Header="Task" MinWidth="160"/>
                    <DataGridTemplateColumn Header="Start" MinWidth="140">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Start, Converter={StaticResource DateTimeStringConverter}, ConverterParameter=g}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding Start, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Start" MinWidth="140" Visibility="Collapsed">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding StartPreservingEffort, Converter={StaticResource DateTimeStringConverter}, ConverterParameter=g}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding StartPreservingEffort, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Finish" MinWidth="140">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Finish, Converter={StaticResource DateTimeStringConverter}, ConverterParameter=g}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding Finish, Converter={StaticResource FinishDateConverter}, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Milestone">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Name="TextBlock" Text="✓" Visibility="Hidden" HorizontalAlignment="Center" Padding="4,0,10,8"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsMilestone}" Value="True">
                                        <Setter TargetName="TextBlock" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsMilestone, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Compl.">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Name="TextBlock" Text="✓" Visibility="Hidden" HorizontalAlignment="Center" Padding="4,0,10,8"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                                        <Setter TargetName="TextBlock" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsCompleted, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Assignments" MinWidth="160">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding AssignmentsContent}" VerticalAlignment="Center" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <pdgcc:AssignmentComboBox AvailableItemsSource="{Binding AssignableResources, RelativeSource={RelativeSource AncestorType=pdgcc:GanttChartDataGrid}}" SelectedContent="{Binding AssignmentsContent, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </pdgcc:DataGridColumnCollection>
            </pdgcc:GanttChartDataGrid.Columns>
        </pdgcc:GanttChartDataGrid>
    </DockPanel>
</Window>
