<Window x:Class="Demos.WPF.CSharp.GanttChartDataGrid.Templating.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:hdc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.HierarchicalData.LightWPF.Controls"
        xmlns:pdgcc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.ProjectData.GanttChart.LightWPF.Controls"
        xmlns:shapes="clr-namespace:DlhSoft.Windows.Shapes;assembly=DlhSoft.ProjectData.GanttChart.LightWPF.Controls" 
        xmlns:converters="clr-namespace:DlhSoft.Windows.Converters;assembly=DlhSoft.ProjectData.GanttChart.LightWPF.Controls" 
        Title="GanttChartDataGrid Templating Sample" Width="800" Height="600">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="AppResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <pdgcc:GanttChartDataGrid x:Name="GanttChartDataGrid">
            <!-- Customize component templates starting from the default XAML. -->
            <pdgcc:GanttChartDataGrid.ItemTemplate>
                <DataTemplate>
                    <pdgcc:TaskPresenter IsVirtuallyVisible="{Binding IsVirtuallyVisible}" Visibility="{Binding BarVisibility}"/>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.ItemTemplate>
            <!-- Task bar templates. -->
            <pdgcc:GanttChartDataGrid.StandardTaskTemplate>
                <DataTemplate>
                    <Grid>
                        <Canvas Opacity="0.5" Visibility="{Binding GanttChartView.BaselineVisibility}">
                            <Rectangle Fill="Transparent" Height="{Binding ComputedBarHeight}" Canvas.Left="{Binding ComputedBaselineBarLeft}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" Stroke="{Binding (pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}" StrokeDashArray="2 2" Canvas.Top="-4" Width="{Binding ComputedBaselineBarWidth}"/>
                        </Canvas>
                        <Grid>
                            <Rectangle Fill="{Binding (pdgcc:GanttChartView.StandardBarFill)}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" Stroke="{Binding (pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}"/>
                            <pdgcc:DragTaskThumb IsHitTestVisible="{Binding IsBarThumbHitTestVisible}" IsEnabled="{Binding GanttChartView.IsTaskStartThumbEnabled}" Role="UpdateStart" Visibility="{Binding GanttChartView.ThumbVisibility}"/>
                            <pdgcc:DragTaskThumb HorizontalAlignment="Right" IsHitTestVisible="{Binding IsBarThumbHitTestVisible}" IsEnabled="{Binding GanttChartView.IsTaskFinishThumbEnabled}" Role="UpdateFinish" Visibility="{Binding GanttChartView.ThumbVisibility}" Width="2"/>
                            <pdgcc:DragTaskThumb HorizontalAlignment="Left" IsHitTestVisible="{Binding IsBarThumbHitTestVisible}" IsEnabled="{Binding GanttChartView.IsTaskStartOnlyThumbEnabled}" Margin="-2,0,0,0" Role="UpdateStartOnly" Visibility="{Binding GanttChartView.ThumbVisibility}" Width="2"/>
                        </Grid>
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Visibility="{Binding GanttChartView.TaskCompletedEffortVisibility}" VerticalAlignment="Center">
                            <Rectangle Fill="{Binding (pdgcc:GanttChartView.StandardCompletedBarFill)}" Height="{Binding GanttChartView.CompletedBarHeight}" IsHitTestVisible="False" RadiusY="{Binding GanttChartView.StandardCompletedBarCornerRadius}" RadiusX="{Binding GanttChartView.StandardCompletedBarCornerRadius}" Stroke="{Binding (pdgcc:GanttChartView.StandardCompletedBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardCompletedBarStrokeThickness}" VerticalAlignment="Center" Width="{Binding ComputedCompletedBarWidth}"/>
                            <pdgcc:DragTaskThumb Height="{Binding GanttChartView.BarHeight}" IsHitTestVisible="{Binding IsBarThumbHitTestVisible}" IsEnabled="{Binding GanttChartView.IsTaskCompletionThumbEnabled}" Role="UpdateCompletedFinish" Visibility="{Binding GanttChartView.ThumbVisibility}" Width="2">
                                <pdgcc:DragTaskThumb.ToolTip>
                                    <Binding ConverterParameter="0.##%" Path="Completion">
                                        <Binding.Converter>
                                            <converters:NumberStringConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </pdgcc:DragTaskThumb.ToolTip>
                            </pdgcc:DragTaskThumb>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.StandardTaskTemplate>
            <pdgcc:GanttChartDataGrid.SummaryTaskTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.2*"/>
                                <RowDefinition Height="0.5*"/>
                                <RowDefinition Height="0.3*"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Column="1" Fill="{Binding (pdgcc:GanttChartView.SummaryBarFill)}" Grid.Row="1" Stroke="{Binding (pdgcc:GanttChartView.SummaryBarStroke)}" StrokeThickness="{Binding GanttChartView.SummaryBarStrokeThickness}"/>
                            <Line Grid.Column="1" Grid.Row="2" Stroke="{Binding (pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="1" StrokeDashArray="1 1" Visibility="{Binding ExpansionVisibility}" X1="0" X2="{Binding ComputedBarWidth}" Y1="1" Y2="1"/>
                            <Polygon Grid.Column="0" Fill="{Binding (pdgcc:GanttChartView.SummaryBarFill)}" Points="0,0 0,0.5 0.5,0.8 1,0.5 1,0" Grid.Row="1" Grid.RowSpan="2" Stretch="Fill" Stroke="{Binding (pdgcc:GanttChartView.SummaryBarStroke)}" StrokeThickness="{Binding GanttChartView.SummaryBarStrokeThickness}" Width="{Binding GanttChartView.BarHeight}"/>
                            <Polygon Grid.Column="3" Fill="{Binding (pdgcc:GanttChartView.SummaryBarFill)}" Points="1,0 1,0.5 0.5,0.8 0,0.5 0,0" Grid.Row="1" Grid.RowSpan="2" Stretch="Fill" Stroke="{Binding (pdgcc:GanttChartView.SummaryBarStroke)}" StrokeThickness="{Binding GanttChartView.SummaryBarStrokeThickness}" Width="{Binding GanttChartView.BarHeight}"/>
                        </Grid>
                        <pdgcc:TaskExpander Cursor="Hand" IsTabStop="False" IsChecked="{Binding IsExpanded, Mode=TwoWay}">
                            <pdgcc:TaskExpander.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Rectangle Fill="Transparent"/>
                                </ControlTemplate>
                            </pdgcc:TaskExpander.Template>
                        </pdgcc:TaskExpander>
                    </Grid>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.SummaryTaskTemplate>
            <pdgcc:GanttChartDataGrid.MilestoneTaskTemplate>
                <DataTemplate>
                    <Grid>
                        <Canvas Opacity="0.5" Visibility="{Binding GanttChartView.BaselineVisibility}">
                            <Polygon Fill="Transparent" Height="{Binding ComputedBarHeight}" Canvas.Left="{Binding ComputedBaselineBarLeft}" Points="0.5,0 1,0.5 0.5,1 0,0.5" Stretch="UniformToFill" Stroke="{Binding (pdgcc:GanttChartView.MilestoneBarStroke)}" StrokeThickness="{Binding GanttChartView.MilestoneBarStrokeThickness}" StrokeDashArray="2 2" Width="{Binding ComputedBarHeight}"/>
                        </Canvas>
                        <Polygon Fill="{Binding (pdgcc:GanttChartView.MilestoneBarFill)}" Points="0.5,0 1,0.5 0.5,1 0,0.5" Stretch="UniformToFill" Stroke="{Binding (pdgcc:GanttChartView.MilestoneBarStroke)}" StrokeThickness="{Binding GanttChartView.MilestoneBarStrokeThickness}"/>
                        <pdgcc:DragTaskThumb IsHitTestVisible="{Binding IsBarThumbHitTestVisible}" IsEnabled="{Binding GanttChartView.IsTaskStartThumbEnabled}" Role="UpdateStart" Visibility="{Binding GanttChartView.ThumbVisibility}"/>
                    </Grid>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.MilestoneTaskTemplate>
            <!-- Attached assignments content template for task bars. -->
            <pdgcc:GanttChartDataGrid.AssignmentsTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding AssignmentsContent}" IsHitTestVisible="False" IsTabStop="False"/>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.AssignmentsTemplate>
            <!-- Dependency line template. -->
            <pdgcc:GanttChartDataGrid.DependencyLineTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ToolTip>
                            <ToolTip ContentTemplate="{Binding GanttChartView.PredecessorToolTipTemplate}" Content="{Binding}" Visibility="{Binding GanttChartView.DependencyToolTipVisibility}"/>
                        </Grid.ToolTip>
                        <shapes:DependencyArrowLine Points="{Binding ComputedDependencyLinePoints}" Stroke="Transparent" StrokeThickness="3"/>
                        <shapes:DependencyArrowLine x:Name="DependencyArrowLine" Points="{Binding ComputedDependencyLinePoints}" Stroke="{Binding (pdgcc:GanttChartView.DependencyLineStroke)}" StrokeThickness="{Binding GanttChartView.DependencyLineStrokeThickness}"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding (pdgcc:GanttChartView.DependencyLineStroke)}" Value="{x:Null}">
                            <Setter Property="Stroke" TargetName="DependencyArrowLine" Value="{Binding DependentItem.(pdgcc:GanttChartView.DependencyLineStroke)}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.DependencyLineTemplate>
            <!-- Tool tip templates. -->
            <pdgcc:GanttChartDataGrid.ToolTipTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding Content}" IsTabStop="False"/>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.ToolTipTemplate>
            <pdgcc:GanttChartDataGrid.PredecessorToolTipTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <ContentControl Content="{Binding Item.Content}" IsTabStop="False" VerticalAlignment="Center"/>
                        <TextBlock Margin="1,0" Text="-" VerticalAlignment="Center"><Run Text="-"/></TextBlock>
                        <ContentControl Content="{Binding DependentItem.Content}" IsTabStop="False" VerticalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.PredecessorToolTipTemplate>
            <!-- Hierarchical row expand-collapse button template. -->
            <pdgcc:GanttChartDataGrid.ExpanderTemplate>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5" Width="16">
                        <Path x:Name="ExpandPath" Data="M0,0 L0,6 6,0 z" Fill="Transparent" Stroke="#FF989898">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </pdgcc:GanttChartDataGrid.ExpanderTemplate>
            <!-- Optionally, set up grid columns: template columns are supported. -->
            <pdgcc:GanttChartDataGrid.Columns>
                <pdgcc:DataGridColumnCollection>
                    <hdc:DataTreeGridColumn Header="Task" MinWidth="160"/>
                    <DataGridTemplateColumn Header="Start" MinWidth="140">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Start, Converter={StaticResource DateTimeStringConverter}, ConverterParameter=g}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding Start, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Finish" MinWidth="140">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Finish, Converter={StaticResource DateTimeStringConverter}, ConverterParameter=g}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding Finish, Converter={StaticResource FinishDateConverter}, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Milestone">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Name="TextBlock" Text="✓" Visibility="Hidden" HorizontalAlignment="Center" Padding="4,0,10,8"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsMilestone}" Value="True">
                                        <Setter TargetName="TextBlock" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsMilestone, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Compl.">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Name="TextBlock" Text="✓" Visibility="Hidden" HorizontalAlignment="Center" Padding="4,0,10,8"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                                        <Setter TargetName="TextBlock" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsCompleted, Mode=TwoWay}" IsEnabled="{Binding IsLeaf}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="%" MinWidth="45">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Completion, Converter={StaticResource NumberStringConverter}, ConverterParameter=0.##%}" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Completion, Converter={StaticResource NumberStringConverter}, ConverterParameter=0.##%, Mode=TwoWay}" IsReadOnly="{Binding HasChildren}" BorderThickness="0" Padding="0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Assignments" MinWidth="160">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding AssignmentsContent}" VerticalAlignment="Center" Padding="4"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <pdgcc:AssignmentComboBox AvailableItemsSource="{Binding AssignableResources, RelativeSource={RelativeSource AncestorType=pdgcc:GanttChartDataGrid}}" SelectedContent="{Binding AssignmentsContent, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </pdgcc:DataGridColumnCollection>
            </pdgcc:GanttChartDataGrid.Columns>
            <!-- Some item properties are set in code behind. -->
            <pdgcc:GanttChartItem Content="Task 1"/>
            <pdgcc:GanttChartItem Content="Task 1.1" Indentation="1"/>
            <pdgcc:GanttChartItem Content="Task 1.2" Indentation="1"/>
            <pdgcc:GanttChartItem Content="Task 2"/>
            <pdgcc:GanttChartItem Content="Task 2.1" Indentation="1"/>
            <pdgcc:GanttChartItem Content="Task 2.2" Indentation="1"/>
            <pdgcc:GanttChartItem Content="Task 2.2.1" Indentation="2"/>
            <pdgcc:GanttChartItem Content="Task 2.2.2" Indentation="2"/>
        </pdgcc:GanttChartDataGrid>
    </DockPanel>
</Window>
